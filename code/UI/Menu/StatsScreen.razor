@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Audio;
@using Sandbox.Services;
@using System;
@inherits PanelComponent

<root class="menu translucent-bg">

	<div class="container">
		<div class="buttons">
            <div class="button-bg">
			    <div class="button red singular" onclick="@(() => ButtonBack())">Back</div>
            </div>
		</div>
		<div class="content bg">
	        <div class="title">
		        <span>Stats</span>
	        </div>
            <h1>Global</h1>
            <div class="table">
                <div class="header row">
                    <div class="name">Name</div>
                    <div class="stat">Status</div>
                </div>

                @if (MainMenu.instance.isRefreshingLeaderboards)
                {
                    <div class="name">Refreshing</div>
                }
                else
                {
                    //Log.Info(MainMenu.instance.globalBoard != null);
                    if (MainMenu.instance.globalBoard != null)
                    {
                        foreach (var entry in MainMenu.instance.globalBoard.Entries)
                        {
                            string specialClass = "";
                            if (entry.Me) specialClass = "me";

                            <div class="row @specialClass">
                                <div class="name">

                                    @entry.DisplayName


                                </div>
                                @{
                                    <div class="stat">@LeaderboardTimeFormatted(entry)</div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            <span style="color: red">Error retrieving global leaderboard</span>
                        </div>
                    }
                }
            </div>
            <h1>Friends</h1>
            <div class="table">
                <div class="header row">
                    <div class="name">Name</div>
                    <div class="stat">Status</div>
                </div>

                @if (MainMenu.instance.isRefreshingLeaderboards)
                {
                    <div class="name">Refreshing</div>
                }
                else
                {
                    if (MainMenu.instance.friendsBoard != null)
                    {
                        var i = 0;
                        foreach (var entry in MainMenu.instance.friendsBoard.Entries)
                        {
                            if (++i > 5) break;

                            string specialClass = "";
                            if (entry.Me) specialClass = "me";

                            <div class="row @specialClass">
                                <div class="name">@entry.DisplayName</div>
                                @{
                                    <div class="stat">@LeaderboardTimeFormatted(entry)</div>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <div>
                            <span style="color: red">Error retrieving friends leaderboard</span>
                        </div>
                    }
                }
            </div>
		</div>

	</div>

</root>

@code
{
    string LeaderboardTimeFormatted(Leaderboards.Entry entry)
    {
        double timeInSeconds = entry.Value;
        return $"{timeInSeconds:F3}s";
    }

	void ButtonBack()
	{
		MainMenu.instance.SetMenuState(MenuState.Main);
        var soundHandle = Sound.Play("ui.navigate.back");
        soundHandle.TargetMixer = Mixer.FindMixerByName("UI");
	}

	/// <summary>
    /// update every second
    /// </summary>
    protected override int BuildHash() => System.HashCode.Combine( RealTime.Now.CeilToInt() );
}
