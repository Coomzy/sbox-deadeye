@using Sandbox;
@using Sandbox.UI;
@using System;
@inherits PanelComponent

<root>
	<div class="container">
		<!--<div @ref=medal class="circle"></div>-->
		<img src=@GetCurrentMedalImage() style="width: 200px; height: 200px; margin: -35px 0px -55px 0px" />
		<div class="title">@GetRemainingReactTime()</div>

		@if (@ShouldShowTimeDiff())
		{ 
			<div class="title" style="color: @GetTimeDiffColor(); margin: -0px -200px -200px -535px">@GetTimeDiff()</div>
		}
	</div>
</root>

@code
{
	protected Panel medal;

	string GetRemainingReactTime()
	{
		if (GamePlayManager.instance == null)
		{
			// HACK: Just doing "" didn't seem to make the UI disappear, maybe it doesn't create a valid hash or something?
			return " ";
		}

		var levelTime = GamePlayManager.instance.levelTime;
		var formattedTime = UIManager.FormatTime(levelTime);
		return formattedTime;
	}

	string GetCurrentMedalImage()
	{
		if (GamePlayManager.instance == null)
		{
			// HACK: Just doing "" didn't seem to make the UI disappear, maybe it doesn't create a valid hash or something?
			return " ";
		}

		var currentMedal = GamePlayManager.instance.currentMedal;
		var medalImage = GameSettings.instance.GetMedalImage(currentMedal);
		return medalImage;
	}

	string GetTimeDiff()
	{
		if (GamePlayManager.instance == null)
		{
			return "";
		}

		if (!GamePlayManager.instance.previousBestTime.HasValue)
		{
			return "";
		}

		var formattedTime = UIManager.FormatTime(GamePlayManager.instance.levelTimeDiff, true);
		return formattedTime;
	}

	bool ShouldShowTimeDiff()
	{
		if (GamePlayManager.instance == null)
		{
			return false;
		}
		return GamePlayManager.instance.previousBestTime.HasValue;
	}

	string GetTimeDiffColor()
	{
		if (GamePlayManager.instance == null)
		{
			return "";
		}

		if (!GamePlayManager.instance.previousBestTime.HasValue)
		{
			return "";
		}

		if (GamePlayManager.instance.levelTimeDiff > 0.0f)
		{
			return "red";
		}

		return "lime";
	}

	protected override int BuildHash() => System.HashCode.Combine(GetRemainingReactTime());
}