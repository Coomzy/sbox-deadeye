@using Sandbox;
@using Sandbox.UI;
@using System;
@inherits PanelComponent

<root>
	<div class="container">
		<div class="table">
			<div class="row">
				<div class="column medal">
					<div class="medal-badge @GetCurrentMedalType()">
						<img class="medal @GetCurrentMedalType()" src=@GetCurrentMedalImage()/>						
					</div>
				</div>
				<div class="column time">
					<div class="title">@GetRemainingReactTime()</div>
				</div>
			</div>
			<div class="row timediff">
				<div class="column medal">
					@* For spacing... *@
				</div>
				<div class="column time">
					@if (@ShouldShowTimeDiff())
					{
						<div class="title" style="color: @GetTimeDiffColor();">@GetTimeDiff()</div>
					}
				</div>
			</div>
		</div>
	</div>
</root>

@code
{
	protected Panel medal;

	string GetRemainingReactTime()
	{
		if (GamePlayManager.instance == null)
		{
			// HACK: Just doing "" didn't seem to make the UI disappear, maybe it doesn't create a valid hash or something?
			return " ";
		}

		var levelTime = GamePlayManager.instance.levelTime;
		if (GamePlayManager.isInMarathonMode)
		{
			levelTime = GamePlayManager.marathonModeDecidingTime;
		}
		var formattedTime = UIManager.FormatTime(levelTime);
		return formattedTime;
	}

	string GetCurrentMedalImage()
	{
		if (GamePlayManager.instance == null)
		{
			// HACK: Just doing "" didn't seem to make the UI disappear, maybe it doesn't create a valid hash or something?
			return " ";
		}

		var currentMedal = GamePlayManager.instance.currentMedal;
		return GameSettings.instance.GetMedalImage(currentMedal);
	}

	string GetCurrentMedalType()
	{
		if (GamePlayManager.instance == null) return "";

		return GamePlayManager.instance.currentMedal.ToString();
	}

	string GetTimeDiff()
	{
		if (GamePlayManager.instance == null)
		{
			return "";
		}

		if (GamePlayManager.instance.previousBestTime == null)
		{
			return "";
		}

		var formattedTime = UIManager.FormatTime(GamePlayManager.instance.levelTimeDiff, true);
		return formattedTime;
	}

	bool ShouldShowTimeDiff()
	{
		if (GamePlayManager.instance == null)
		{
			return false;
		}

		if (GamePlayManager.instance.previousBestTime == null)
		{
			return false;
		}

		return true;
	}

	string GetTimeDiffColor()
	{
		if (GamePlayManager.instance == null)
		{
			return "white"; // NOTE: CSS setting must provide a value
		}

		if (GamePlayManager.instance.previousBestTime == null)
		{
			return "white"; // NOTE: CSS setting must provide a value
		}

		if (GamePlayManager.instance.levelTimeDiff > 0.0f)
		{
			return "red";
		}

		return "lime";
	}

	protected override int BuildHash() => System.HashCode.Combine(GetRemainingReactTime(), ShouldShowTimeDiff());
}